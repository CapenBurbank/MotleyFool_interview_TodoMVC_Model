{"version":3,"file":"ej2-circulargauge.min.js","sources":["../../src/circular-gauge/utils/helper.js","../../src/circular-gauge/model/theme.js","../../src/circular-gauge/model/base.js","../../src/circular-gauge/axes/axis.js","../../src/circular-gauge/annotations/annotations.js","../../src/circular-gauge/model/constants.js","../../src/circular-gauge/user-interaction/tooltip.js","../../src/circular-gauge/axes/axis-renderer.js","../../src/circular-gauge/axes/pointer-renderer.js","../../src/circular-gauge/axes/axis-panel.js","../../src/circular-gauge/legend/legend.js","../../src/circular-gauge/model/pdf-export.js","../../src/circular-gauge/model/image-export.js","../../src/circular-gauge/model/print.js","../../src/circular-gauge/axes/gradient.js","../../src/circular-gauge/circular-gauge.js","../../src/global.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { compile as templateComplier, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { createElement, remove, setStyleAttribute } from '@syncfusion/ej2-base';\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @param  {string} id - Specifies the id of the text.\n * @returns {Size} - Returns the size of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n *\n * @param {string} value - Specifies the value.\n * @param {number} maxDimension - Specifies the  maximum dimension.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n *\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to set style to the element.\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {string} fill - Specifies the fill of the element.\n * @param {BorderModel} border - Specifies the border of the element.\n * @returns {void}\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to measure the element rect.\n *\n * @param {HTMLElement} element - Specifies the html element.\n * @returns {ClientRect} - Returns the client rect.\n * @private\n */\nexport function measureElementRect(element) {\n    document.body.appendChild(element);\n    var bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/**\n * Function to convert the number from string.\n *\n * @param {string} value - Specifies the value.\n * @param {number} containerSize - Specifies the container size.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to create the text element.\n *\n * @param {TextOption} options - Specifies the options.\n * @param {FontModel} font - Specifies the font.\n * @param {string} color - Specifies the color.\n * @param {HTMLElement | Element} parent - Specifies the html element.\n * @param {string} styles - Specifies the style.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {};\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    var htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n *\n * @param {PathOption} options - Specifies the options.\n * @param {Element} element - Specifies the element.\n * @param {CircularGauge} gauge - Specifies the gauge.\n * @param {string} functionName - Specifies the function name.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to calculate the sum of array values.\n *\n * @param {number} from - Specifies the from value.\n * @param {number} to - Specifies the to value.\n * @param {number[]} values - Specifies the number.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n/**\n * Function to calculate the value for linear animation effect\n *\n * @param {number} currentTime - Specifies the currentTime.\n * @param {number} startValue - Specifies the startValue.\n * @param {number} endValue - Specifies the endValue.\n * @param {number} duration - Specifies the duration.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to get the angle from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get the degree for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the value from angle for circular gauge.\n *\n * @param {number} angle - Specifies the angle.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returs the number.\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {boolean} Returns the boolean value.\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get angle from location for circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {GaugeLocation} point - Specifies the point.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n *\n * @param {number} degree - Specifies the degree.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} center - Specifies the center.\n * @returns {GaugeLocation} - Returns the gauge location.\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {number} start - Specifies the start.\n * @param {number} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} startWidth - Specifies the startWidth.\n * @param {number} endWidth - Specifies the endWidth.\n * @param {Range} range - Specifies the range.\n * @param {Axis} axis - Specifies the axis.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    var startRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + startWidth : range.position === 'Cross'\n        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;\n    var endRadius = !isNullOrUndefined(range) ? (range.position === 'Outside'\n        && !range.isLinearCircularGradient ? radius + endWidth : range.position === 'Cross' &&\n        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;\n    var arcRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + ((startWidth + endWidth) / 2) :\n        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)\n            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);\n    var insideArcRadius = !isNullOrUndefined(range) && range.position === 'Cross' ?\n        radius + ((startWidth + endWidth) / 4)\n            - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;\n    var insideEndRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?\n        radius - ((startWidth - endWidth) / 2) : radius;\n    var insideStartRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?\n        radius + ((startWidth - endWidth) / 2) : radius;\n    if (startWidth !== undefined && endWidth !== undefined) {\n        insideEndRadius = range.position === 'Cross' ? (degree > 325 ? insideStartRadius : insideEndRadius) : insideEndRadius;\n        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, startRadius, endRadius, arcRadius, (degree < 180) ? 0 : 1, center, degree, range, axis);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcPath(start, end, radius, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + pointPosition.x\n        + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo\n        + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z ';\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition) {\n    var roundedPath = 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y;\n    if (isNullOrUndefined(arcStartTwo) && isNullOrUndefined(arcEndTwo)) {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' '\n            + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n    else {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 '\n            + pointPosition.x + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo + ' 0 ' + clockWise + ' 0 '\n            + innerStart.x + ' ' + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n}\n/**\n * Function to get the range path direction for different start and end width of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the options.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {number} radius - Specifies the radius.\n * @param {number} startRadius - Specifies the startRadius.\n * @param {number} endRadius - Specifies the endRadius.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the range path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start values.\n * @param {GaugeLocation} end - Specifies the end values.\n * @param {GaugeLocation} innerStart - Specifies the innerStart values.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd values.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the string value.\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, degree, range, axis) {\n    var startWidth = range.startWidth;\n    var endWidth = range.endWidth;\n    var widthDifference = Math.abs(startWidth - endWidth);\n    var endArc;\n    var startArc;\n    if (startWidth > endWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (endRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (startRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if (endWidth > startWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (startRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (endRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n    }\n    else if ((degree > 260) || (!range.isLinearCircularGradient && axis.startAngle === 0 && axis.endAngle === 0)) {\n        return arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, null, null, null, null, startWidth, endWidth, degree, range, axis);\n    }\n    else {\n        if (range.position === 'Cross' || range.position === 'Outside') {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n        }\n        else {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n    }\n}\n/**\n * Function to get start and end width range path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the svg path.\n * @private\n */\nexport function arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, startWidth, endWidth, degree, range, axis) {\n    if (!isNullOrUndefined(range)) {\n        var arcStartOne = void 0;\n        var arcEndOne = void 0;\n        var widthDifference = Math.abs(startWidth - endWidth);\n        var arcStartTwo = void 0;\n        var arcEndTwo = void 0;\n        var startValueToAngle = getAngleFromValue(((range.start + range.end) / 2), axis.maximum, axis.minimum, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var pointPosition = (startWidth < ((endWidth))) ?\n            getLocationFromAngle(startValueToAngle, endRadius, center) : getLocationFromAngle(startValueToAngle, startRadius, center);\n        // eslint-disable-next-line max-len\n        var endDistance = Math.sqrt((Math.pow((innerEnd.x - pointPosition.x), 2)) + (Math.pow((innerEnd.y - pointPosition.y), 2)));\n        var endRadii = endDistance / 2;\n        var centerStartDistance = Math.sqrt((Math.pow((center.x - innerStart.x), 2)) + (Math.pow((center.y - innerStart.y), 2)));\n        var centerDistance = Math.sqrt((Math.pow((center.x - pointPosition.x), 2)) + (Math.pow((center.y - pointPosition.y), 2)));\n        if (range.roundedCornerRadius <= 0) {\n            widthDifference = widthDifference === 0 ? 1 : widthDifference;\n            innerEnd.y = (range.position === 'Cross' && axis.direction === 'ClockWise') ? degree > 325 ?\n                innerEnd.y - (widthDifference / 2) : innerEnd.y : innerEnd.y;\n            var degreeValue = range.position === 'Cross' ? 330 : 325;\n            if (((degreeValue <= degree && degree <= 360))) {\n                arcStartTwo = (axis.direction === 'ClockWise' ? (centerDistance / 2)\n                    : (degree >= 345 ? (startRadius - (widthDifference / 2) - (endWidth / 2))\n                        : range.position === 'Cross' ? (startRadius + (widthDifference / 4) - (startWidth / 2))\n                            : (startRadius - (widthDifference / 2) - (startWidth / 2))));\n                arcEndTwo = (axis.direction === 'ClockWise' ? (centerStartDistance / 2)\n                    : range.position === 'Cross' ?\n                        (endRadius + (widthDifference / 4)) - (endWidth / 4) :\n                        (range.position === 'Outside' && axis.direction === 'AntiClockWise') ? degree < 345 ?\n                            (startRadius - (widthDifference) - (endWidth / 4))\n                            : (startRadius - (widthDifference / 2))\n                            : (endRadius + (widthDifference / 2)) - (endWidth / 2));\n                return arcPath(start, end, radius, endRadii, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition);\n            }\n            else if ((degree > 260 && degree < 325) && range.position !== 'Cross' && range.position !== 'Outside') {\n                var arcStart = (arcRadius - (widthDifference / 2));\n                var arcEnd = (arcRadius - (widthDifference / 2));\n                var angleValueDirection = axis.direction === 'ClockWise' ? degree >= 310 : degree < 345;\n                if (degree < 310) {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcStart, arcEnd, clockWise);\n                }\n                else if (degree >= 310 || angleValueDirection) {\n                    arcStart = (arcRadius - (widthDifference));\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcEnd, arcStart, clockWise);\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n            else {\n                if (range.position === 'Cross') {\n                    var endRadiusValue = axis.direction === 'ClockWise' ? degree <= 300 && degree >= 260 ?\n                        endRadius - (widthDifference / 2) - (startWidth / 4) : endRadius\n                        - (widthDifference) - (startWidth / 2) : degree <= 300 && degree >= 260 ?\n                        endRadius + (widthDifference / 4) - (startWidth / 4) :\n                        endRadius + (widthDifference / 4) - (startWidth / 2);\n                    var startRadiusValue = axis.direction === 'ClockWise' ? degree > 325 ? degree > 340 ? (startRadius - startWidth)\n                        - (widthDifference / 4) : startRadius - (widthDifference / 4)\n                        : startRadius : startRadius - (widthDifference / 4);\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadiusValue, endRadiusValue, clockWise);\n                }\n                else if (range.position === 'Outside') {\n                    if (degree < 325 && degree > 285) {\n                        var arcTwo = void 0;\n                        var startGreater = startWidth / 2;\n                        var endGreater = endWidth / 2;\n                        var arcOne = arcTwo = arcRadius + (widthDifference / 2) + startGreater + endGreater;\n                        innerEnd.y = axis.direction === 'ClockWise' && startWidth !== endWidth && startWidth > widthDifference ?\n                            innerEnd.y - (widthDifference / 2) : innerEnd.y + startGreater;\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcOne, arcTwo, clockWise);\n                    }\n                    else {\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n                    }\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n        }\n        else {\n            var degreeAngle = axis.endAngle < 4 ? 356 : 360;\n            clockWise = degree > degreeAngle ? 0 : clockWise;\n            var degreeValueOne = axis.direction === 'ClockWise' ? 327 : 322;\n            var degreeValueTwo = axis.direction === 'ClockWise' ? 328 : 325;\n            if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n            else if ((degree <= degreeAngle && degree > degreeValueOne) && range.roundedCornerRadius > 0) {\n                arcStartOne = axis.direction === 'ClockWise' ? degree < 334 && degree > 324 ? endRadii - (widthDifference / 2) :\n                    endRadii - (widthDifference / 4) : endRadii;\n                arcStartTwo = (centerDistance / 2);\n                arcEndTwo = axis.direction === 'ClockWise' ? ((centerStartDistance / 2) + (widthDifference / 2)) :\n                    (centerStartDistance / 2);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition);\n            }\n            else if (degree > 270 && degree < degreeValueTwo) {\n                var startAddArc = endRadius + (widthDifference / 2) - (endWidth / 2);\n                var startSubArc = endRadius - (widthDifference / 2) - (endWidth / 2);\n                arcStartOne = (startRadius - (widthDifference / 2) - (startWidth / 2));\n                arcEndOne = (axis.direction === 'ClockWise' ? startSubArc : startAddArc);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, null, null, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, null);\n            }\n            else {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n        }\n    }\n    else {\n        return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n    }\n}\n/**\n * Function to get start and end width range rounded path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} actualStart - Specifies the actualStart value.\n * @param {number} actualEnd - Specifies the actualEnd value.\n * @param {number} oldStart - Specifies the oldStart value.\n * @param {number} oldEnd - Specifies the oldEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth, range, axis) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return arcWidthPathCalculation(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1, center, getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), startWidth, endWidth, degree, range, axis);\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} start - Specifies the start value.\n * @param {number} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {boolean} checkMinValue - Specifies the checkMinValue value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= isCompleteAngle(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get element from id.\n *\n * @param {string} id - Specifies the id.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to compile the template function for circular gauge.\n *\n * @param {string} template - Specifies the template.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {Function} - Returns the template function.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getTemplateFunction(template, gauge) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var e;\n    try {\n        if (gauge.isBlazor) {\n            var numb = template.match(/\\d+/g).toString();\n            template = numb ? template.replace(numb, '') : template;\n            template = template.indexOf('/') !== -1 ? template.replace('/', '') : template;\n        }\n        if (isNaN(parseFloat(template)) && document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n *\n * @param {string} id Specifies the id\n * @returns {void}\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisiblePointer} - Returns the pointer and axis index.\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisibleRange} - Returns the current point.\n * @private\n */\nexport function getRange(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString[tempString.length - 1]\n    };\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = getTemplateFunction(template, gauge);\n    var tooltipData = templateFn ? templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n/**\n * Function to get the mouse position\n *\n * @param {number} pageX - Specifies the pageX value.\n * @param {number} pageY - Specifies the pageY value.\n * @param {Element} element - Specifies the element.\n * @returns {GaugeLocation} - Returns the location.\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * Function to convert the label using format for cirular gauge.\n *\n * @param {string} format - Specifies the format.\n * @returns {string} - Returns th string.\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n *\n * @param {GaugeLocation} location - Specifies the location.\n * @param {string} shape - Specifies the shape.\n * @param {Size} size - Specifies the size.\n * @param {string} url - Specifies the url.\n * @param {PathOption} options - Specifies the path option.\n * @returns {PathOption} - Returns the path.\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    var space;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +\n                    'L' + ' ' + x + ' ' + (y) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/**\n * Function to get range color from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {Range[]} ranges - Specifies the ranges.\n * @param {string} color - Specifies the color.\n * @returns {string} - Returns the color.\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Internal use of circular gauge location\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the label.\n * @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * @param {string} text - Specifies the text.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @param {number} areaWidth - Specifies the area width.\n * @param {string} id - Specifies the id.\n * @param {Element} element - Specifies the element.\n * @returns {void}\n * @private */\nexport function showTooltip(text, x, y, areaWidth, id, element) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    var tooltip = document.getElementById(id);\n    var width = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    }).width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            innerHTML: text,\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"'\n        });\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerHTML = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n}\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n/**\n * To trigger the download element\n *\n * @param {string} fileName - Specifies the file name.\n * @param {ExportType} type - Specifies the export type.\n * @param {string} url - Specifies the url.\n * @param {boolean} isDownload - Specifies the boolean value.\n * @returns {void}\n */\nexport function triggerDownload(fileName, type, url, isDownload) {\n    createElement('a', {\n        attrs: {\n            'download': fileName + '.' + type.toLocaleLowerCase(),\n            'href': url\n        }\n    }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n        view: window,\n        bubbles: false,\n        cancelable: true\n    }));\n}\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n/**\n * @param {string} theme theme\n * @returns {string[]} palette\n * @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    // switch (theme) {\n    //     case 'Material':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    //      case 'Fabric':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    // }\n    return palette;\n}\n/**\n * Function to get ThemeStyle\n *\n * @param {GaugeTheme} theme theme\n * @returns {IThemeStyle} style\n * @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Sets and gets the options to customize the color and width of the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the font style for the circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to customize the tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * Sets and gets the options to customize the tooltip for annotation in circular gauge.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Sets and gets the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the tooltip of the circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/member-delimiter-style */\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the axis line in circular gauge component.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Sets and gets the axis label in circular gauge component.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    __decorate([\n        Property(true)\n    ], Label.prototype, \"shouldMaintainPadding\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Sets and gets the option to customize the ranges of an axis in circular gauge component.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isLinearCircularGradient = false;\n        return _this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Range.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radialGradient\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Sets and gets the major and minor tick lines of an axis in circular gauge component.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property('0')\n    ], Tick.prototype, \"dashArray\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Sets and gets the needle cap of pointer in circular gauge component.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"radialGradient\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Sets and gets the pointer needle in the circular gauge component.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"radialGradient\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Sets and gets the animation of pointers in circular gauge component.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Sets and gets the annotation element for an axis in circular gauge component.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Sets and gets the pointers of an axis in circular gauge component.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Pointer.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Pointer.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property('')\n    ], Pointer.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleStartWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleEndWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radialGradient\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Sets and gets the options to customize the axis for the circular gauge component.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Sets and gets the minimum value of an axis in the circular gauge component.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { stringToNumber, getLocationFromAngle, getFontStyle } from '../utils/helper';\nimport { getElement, getTemplateFunction, measureElementRect } from '../utils/helper';\nimport { annotationRender } from '../model/constants';\nimport { createElement, updateBlazorTemplate, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var width = this.gauge.availableSize.width;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        if (!isNullOrUndefined(document.getElementById(this.elementId + '_Secondary_Element'))) {\n            document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';\n        }\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount && !this.gauge.isBlazor) {\n            parentElement.appendChild(element);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.gauge.renderReactTemplates();\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var _this = this;\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        if (this.gauge.isBlazor) {\n            var cancel = argsData.cancel, name_1 = argsData.name, content = argsData.content, textStyle = argsData.textStyle;\n            argsData = { cancel: cancel, name: name_1, content: content, annotation: annotation, textStyle: textStyle };\n        }\n        this.gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn;\n            var templateElement;\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content, _this.gauge);\n                if (templateFn && (!_this.gauge.isBlazor ? templateFn(axis, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length : {})) {\n                    templateElement = Array.prototype.slice.call(templateFn(!_this.gauge.isBlazor ? axis : {}, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    childElement.appendChild(createElement('div', {\n                        innerHTML: argsData.content,\n                        id: 'StringTemplate',\n                        styles: getFontStyle(argsData.textStyle)\n                    }));\n                }\n                _this.updateLocation(childElement, axis, annotation);\n                element.appendChild(childElement);\n                var parentElement = document.getElementById(_this.elementId + '_Secondary_Element');\n                if (_this.gauge.isBlazor && annotationIndex === (_this.gauge.axes[axisIndex].annotations.length - 1) &&\n                    element && parentElement) {\n                    parentElement.appendChild(element);\n                    for (var i = 0; i < _this.gauge.axes[axisIndex].annotations.length; i++) {\n                        updateBlazorTemplate(_this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + i, 'ContentTemplate', _this.gauge.axes[axisIndex].annotations[i]);\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Annotation} annotation - Specifies the annotation.\n     * @returns {void}\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","/**\n * Specifies the gauge constant value\n */\n/**\n * Sets and gets loaded event name in the circular gauge component.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Sets and gets load event name in the circular gauge component.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Sets and gets animation complete event name in the circular gauge component.\n *\n * @private\n */\nexport var animationComplete = 'animationComplete';\n/**\n * Sets and gets axis label render event name in the circular gauge component.\n *\n * @private\n */\nexport var axisLabelRender = 'axisLabelRender';\n/**\n * Sets and gets radius calculate event name in the circular gauge component.\n *\n * @private\n */\nexport var radiusCalculate = 'radiusCalculate';\n/**\n * Sets and gets tooltip render event name in the circular gauge component.\n *\n * @private\n */\nexport var tooltipRender = 'tooltipRender';\n/**\n * Sets and gets annotation render event name in the circular gauge component.\n *\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Sets and gets gauge mouse move event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/**\n * Sets and gets gauge mouse leave event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/**\n * Sets and gets gauge mouse down event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/**\n * Sets and gets gauge mouse up event name in circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/**\n * Sets and gets drag start event name in the circular gauge component.\n *\n * @private\n */\nexport var dragStart = 'dragStart';\n/**\n * Sets and gets drag move event name in the circular gauge component.\n *\n * @private\n */\nexport var dragMove = 'dragMove';\n/**\n * Sets and gets drag end event name in the circular gauge component.\n *\n * @private\n */\nexport var dragEnd = 'dragEnd';\n/**\n * Sets and gets resize event name in the circular gauge component.\n *\n * @private\n */\nexport var resized = 'resized';\n/**\n * Sets and gets before print event name in the circular gauge component.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Sets and gets pointer start event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerStart = 'pointerStart';\n/**\n * Sets and gets pointer move event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerMove = 'pointerMove';\n/**\n * Sets and gets pointer end event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerEnd = 'pointerEnd';\n/**\n * Sets and gets range start event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeStart = 'rangeStart';\n/**\n * Sets and gets range move event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeMove = 'rangeMove';\n/**\n * Sets and gets range end event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeEnd = 'rangeEnd';\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { getPointer, Rect, getMousePosition, getElementSize, stringToNumber } from '../utils/helper';\nimport { getAngleFromValue, getLabelFormat, getLocationFromAngle } from '../utils/helper';\nimport { Browser, createElement, remove } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Sets and gets the module that handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = this.tooltip.textStyle;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent_1 = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'\n            };\n            if (this.gauge.isBlazor) {\n                var name_1 = tooltipArgs.name, cancel = tooltipArgs.cancel, content = tooltipArgs.content, location_1 = tooltipArgs.location, tooltip = tooltipArgs.tooltip, event_1 = tooltipArgs.event, appendInBodyTag = tooltipArgs.appendInBodyTag, type = tooltipArgs.type;\n                tooltipArgs = { name: name_1, cancel: cancel, content: content, location: location_1, tooltip: tooltip, event: event_1, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var pointerTooltip = function (tooltipArgs) {\n                var template = tooltipArgs.tooltip.template;\n                if (template !== null && template.length === 1) {\n                    template = template[template[0]];\n                }\n                if (!tooltipArgs.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location);\n                    }\n                }\n                else {\n                    tooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs.cancel && !samePointerEle) {\n                    tooltipArgs.tooltip.textStyle.color = tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor;\n                    tooltipArgs.tooltip.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily || tooltipArgs.tooltip.textStyle.fontFamily;\n                    tooltipArgs.tooltip.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        tooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, tooltipArgs.tooltip.textStyle, tooltipArgs.tooltip.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs, pointerTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_2 = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle_1 = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData_1 = (this.currentRange.start).toString();\n            var endData_1 = (this.currentRange.end).toString();\n            var rangeContent_1 = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||\n                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||\n                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'\n            };\n            if (this.gauge.isBlazor) {\n                var name_2 = rangeTooltipArgs.name, cancel = rangeTooltipArgs.cancel, content = rangeTooltipArgs.content, location_2 = rangeTooltipArgs.location, tooltip = rangeTooltipArgs.tooltip, event_2 = rangeTooltipArgs.event, appendInBodyTag = rangeTooltipArgs.appendInBodyTag, type = rangeTooltipArgs.type;\n                rangeTooltipArgs = { name: name_2, cancel: cancel, content: content, location: location_2, tooltip: tooltip, event: event_2, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeTooltip = function (rangeTooltipArgs) {\n                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n                if (rangeTemplate !== null && rangeTemplate.length === 1) {\n                    rangeTemplate = rangeTemplate[rangeTemplate[0]];\n                }\n                if (rangeTemplate) {\n                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);\n                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);\n                }\n                if (!_this.tooltip.rangeSettings.showAtMousePosition) {\n                    if (rangeTemplate) {\n                        var elementSize = getElementSize(rangeTemplate, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location) : rect_2;\n                    }\n                    else {\n                        _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location);\n                    }\n                }\n                else {\n                    rangeTooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_2;\n                }\n                if (!rangeTooltipArgs.cancel) {\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily;\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipArgs.tooltip.rangeSettings.textStyle, rangeTooltipArgs.tooltip.rangeSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs, rangeTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var annotationAxisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_3 = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipElement();\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,\n                type: 'Annotation'\n            };\n            if (this.gauge.isBlazor) {\n                var name_3 = annotationTooltipArgs.name, cancel = annotationTooltipArgs.cancel, content = annotationTooltipArgs.content, location_3 = annotationTooltipArgs.location, tooltip = annotationTooltipArgs.tooltip, event_3 = annotationTooltipArgs.event, appendInBodyTag = annotationTooltipArgs.appendInBodyTag, type = annotationTooltipArgs.type;\n                annotationTooltipArgs = { name: name_3, cancel: cancel, content: content, location: location_3, tooltip: tooltip, event: event_3, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var annotationTooltip = function (annotationTooltipArgs) {\n                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n                if (annotationTemplate !== null && annotationTemplate.length === 1) {\n                    annotationTemplate = annotationTemplate[annotationTemplate[0]];\n                }\n                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();\n                _this.tooltipPosition = 'RightTop';\n                _this.arrowInverted = true;\n                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n                _this.tooltipRect = new Rect(rect_3.x, rect_3.y, rect_3.width, rect_3.height);\n                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||\n                    _this.gauge.tooltip.annotationSettings.template !== null)) {\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.color = annotationTooltipArgs.tooltip.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        annotationTooltipArgs.tooltip.textStyle.fontFamily;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        annotationTooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTooltipArgs.tooltip.annotationSettings.textStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs, annotationTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.clearTemplate();\n        }\n    };\n    /**\n     * Method to create tooltip svg element.\n     *\n     * @param {Tooltip} svgTooltip - Specifies the tooltip element.\n     * @param {ITooltipRenderEventArgs} tooltipArg - Specifies the tooltip arguments.\n     * @param {string} template - Specifies the tooltip template.\n     * @param {boolean} arrowInverted - Specifies the boolean value.\n     * @param {Rect} tooltipRect - Specifies the rect element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @param {string} fill - Spcifies the fill color of the tooltip.\n     * @param {FontModel} textStyle - Spcifies the text style of the tooltip.\n     * @param {BorderModel} border - Specifies the border of the tooltip.\n     * @returns {Tooltip} - Returns the tooltip.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        svgTooltip = new Tooltip({\n            enable: true,\n            data: { value: tooltipArg.content },\n            template: template,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [tooltipArg.content],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: border,\n            blazorTemplate: { name: 'TooltipTemplate', parent: gauge.tooltip }\n        });\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     *\n     * @returns {void}\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip',\n                styles: 'position: absolute;pointer-events:none;'\n            });\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    /**\n     * Method to get parent annotation element.\n     *\n     * @param {Element} child - Specifies the annotation element.\n     * @returns {boolean} - Returns the boolean value.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     *\n     * @param {number} currentValue - Specifies the current value.\n     * @returns {number} - Returns the round number.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     *\n     * @param {Rect} rect - Specifies the rect element.\n     * @param {number} angle - Specifies the angle.\n     * @param {string} text - Specifies the text.\n     * @param {GaugeLocation} location - Specifies the location.\n     * @returns {Rect} - Returns the rect element.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n            }\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.gauge.element.addEventListener('contextmenu', this.removeTooltip);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { getLocationFromAngle, PathOption, stringToNumber, TextOption, textElement, appendPath, toPixel } from '../utils/helper';\nimport { getAngleFromValue, isCompleteAngle, getPathArc, getDegree, getRoundedPathArc, getRangeColor } from '../utils/helper';\nimport { getRangePalette } from '../model/theme';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to check the angles.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.checkAngles = function (axis) {\n        axis.startAngle = axis.startAngle >= 360 ? 360 : axis.startAngle <= -360 ? -360 : axis.startAngle;\n        axis.endAngle = axis.endAngle >= 360 ? 360 : axis.endAngle <= -360 ? -360 : axis.endAngle;\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var checkLabelOpposed = 0;\n        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&\n            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&\n            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?\n            axis.lineStyle.width + axis.currentRadius / 20 :\n            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);\n        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else if (style.position === 'Cross') {\n            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, style, lastTextHeight, lastLabelAnchor, lastLabelAngle);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, style, currentTextHeight, anchor, angle);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, style, textHeight, anchor, angle);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            style.font.fontFamily = this.gauge.themeStyle.labelFontFamily || style.font.fontFamily;\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     *\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} angle - Specifies the angle.\n     * @param {VisibleLabels} label - Specifies the labels.\n     * @returns {string} - Returns the anchor.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     *\n     * @param {GaugeLocation} previousLocation - Specifies the previous location.\n     * @param {number} previousWidth - Specifies the previous width.\n     * @param {number} previousHeight - Specifies the previous height.\n     * @param {GaugeLocation} currentLocation - Specifies the current location.\n     * @param {number} currentWidth - Specifies the current width.\n     * @param {number} currentHeight - Specifies the current height.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||\n            ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     *\n     * @param {GaugeLocation} actualLocation - Specifies the actual location.\n     * @param {number} textWidth - Specifies the text width.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} textHeight - Specifies the text height.\n     * @param {string} anchorPosition - Specifies the anchor position.\n     * @param {number} angle - Specifies the angle.\n     * @returns {GaugeLocation} - Returns the gauge location.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, style, textHeight, anchorPosition, angle) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     *\n     * @param {number} angle - Specifies the angle.\n     * @param {number} size - Specifies the size.\n     * @returns {number} - Returns the fineal size.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     *\n     * @param {number} value - Specifies the value.\n     * @param {Tick} options - Specifies the options.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth) +\n            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the range path of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Range} range - Specifies the range.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    /* eslint-disable @typescript-eslint/dot-notation */\n    AxisRenderer.prototype.drawRangePath = function (axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, colorIndex) {\n        var startValue;\n        var direction;\n        var endValue;\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        var gradientRangeColor;\n        if (range.isLinearCircularGradient) {\n            var rangeSplitValue = ((range.end - range.start) / range.linearGradient.colorStop.length);\n            var rangeStart = range.linearGradient.colorStop.length > 1 ?\n                (range.start + (rangeSplitValue * (colorIndex))) : range.start;\n            var rangeEnd = range.linearGradient.colorStop.length > 1 ? (rangeStart + rangeSplitValue) : range.end;\n            startValue = Math.min(Math.max(rangeStart, min), rangeEnd);\n            endValue = Math.min(Math.max(rangeStart, rangeEnd), max);\n        }\n        else {\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n        }\n        startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        var isAngleCross360 = (startAngle > endAngle);\n        if (axis.rangeGap != null && axis.rangeGap > 0\n            || (!isNullOrUndefined(range.linearGradient) && !range.isLinearCircularGradient\n                && (colorIndex === range.linearGradient.colorStop.length - 1))) {\n            startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle :\n                colorIndex === 0 && range.isLinearCircularGradient ? axis.direction === 'AntiClockWise' ?\n                    startAngle - (axis.rangeGap / Math.PI) :\n                    startAngle + (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient\n                    ? startAngle + (axis.rangeGap / Math.PI) : startAngle;\n            endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle :\n                !isNullOrUndefined(range.linearGradient) && colorIndex === range.linearGradient.colorStop.length - 1\n                    && range.isLinearCircularGradient ?\n                    axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) :\n                        endAngle - (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient ?\n                    endAngle - (axis.rangeGap / Math.PI) : endAngle;\n        }\n        if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle))) {\n            endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n            endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n            var radius = range.roundedCornerRadius;\n            var process = (radius * 0.25);\n            var degreeValue = getDegree(startAngle, endAngle);\n            oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n            oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n            roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                    ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n            roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                    ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n            if (this.gauge.gradientModule && ((!isNullOrUndefined(range.linearGradient)\n                && !isNullOrUndefined(range.linearGradient.colorStop)) || (!isNullOrUndefined(range.radialGradient)\n                && !isNullOrUndefined(range.radialGradient.colorStop)))) {\n                if (range.isLinearCircularGradient) {\n                    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                    var degree = getDegree(startAngle, endAngle);\n                    var rangeColorLength = range.linearGradient.colorStop.length;\n                    var degreeRange = ((axis.startAngle === axis.endAngle ?\n                        (axis.startAngle === 0 && axis.endAngle === 0 ? 360 : axis.startAngle) :\n                        (axis.endAngle - axis.startAngle)) - degree * (rangeColorLength - 1));\n                    var degreeRangeValue = void 0;\n                    if (degreeRange <= 360 && degreeRange >= 270) {\n                        degreeRangeValue = 270;\n                    }\n                    else if (degreeRange <= 270 && degreeRange >= 180) {\n                        degreeRangeValue = 180;\n                    }\n                    else if (degreeRange <= 180 && degreeRange >= 90) {\n                        degreeRangeValue = 90;\n                    }\n                    else if (degreeRange <= 90 && degreeRange >= 0) {\n                        degreeRangeValue = 0;\n                    }\n                    var gradientDegree = axis.direction === 'AntiClockWise' ?\n                        (axis.startAngle === axis.endAngle ? 0 : axis.startAngle) + degree * ((rangeColorLength - 1) - colorIndex)\n                        : axis.startAngle + degree * (colorIndex);\n                    var gradientAngle = axis.startAngle < axis.endAngle ? axis.direction === 'AntiClockWise'\n                        ? axis.ranges.length > 1 ? rangeIndex === 0 ? (360 - (axis.startAngle\n                            + (degree * (colorIndex)))) : (axis.startAngle + (degree * (colorIndex + 1))) :\n                            axis.startAngle + (degreeRangeValue + degree * ((rangeColorLength - 1) - colorIndex)) : axis.startAngle\n                        + (degree * (colorIndex)) : axis.endAngle === 360 || axis.startAngle === axis.endAngle\n                        ? axis.direction === 'AntiClockWise' ? axis.startAngle === axis.endAngle ?\n                            (axis.startAngle === 0 && axis.endAngle === 0 ? 0 : 360) - axis.startAngle +\n                                degreeRangeValue + (degree * ((rangeColorLength - 1) - colorIndex))\n                            : degree * ((rangeColorLength - 1) - colorIndex) : degree * (colorIndex) :\n                        gradientDegree < 360 ? gradientDegree : gradientDegree - 360;\n                    range.gradientAngle = rangeIndex === 0 ? axis.rangeGap ? gradientAngle + axis.rangeGap\n                        : gradientAngle : axis.rangeGap > 0 ? axis.ranges[rangeIndex - 1]['gradientAngle'] + axis.rangeGap\n                        : axis.ranges[rangeIndex - 1]['gradientAngle'];\n                    if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                        ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                        range.gradientAntiAngle = gradientAngle;\n                    }\n                    if (rangeIndex !== 0) {\n                        gradientAngle = axis.direction === 'AntiClockWise' ? axis.ranges.length > 1 ?\n                            axis.ranges[rangeIndex - 1]['gradientAntiAngle'] - gradientAngle + axis.startAngle :\n                            axis.ranges[rangeIndex - 1]['gradientAntiAngle'] + gradientAngle :\n                            range.gradientAngle + gradientAngle - axis.startAngle;\n                        range.gradientAngle = axis.rangeGap != null && axis.rangeGap > 0 ? colorIndex === rangeColorLength - 1 ?\n                            gradientAngle + axis.ranges[rangeIndex - 1]['gradientAngle'] : gradientAngle : gradientAngle;\n                        if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                            ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                            range.gradientAntiAngle = gradientAngle;\n                        }\n                    }\n                    if (gradientAngle > 45 && gradientAngle <= 115\n                        || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) <= 2)) {\n                        direction = axis.direction === 'AntiClockWise' ? 'bottom' : 'top';\n                    }\n                    else if (gradientAngle > 115 && gradientAngle < 170) {\n                        direction = axis.direction === 'AntiClockWise' ? 'left' : 'right';\n                    }\n                    else if (gradientAngle >= 170 && gradientAngle <= 280) {\n                        direction = axis.direction === 'AntiClockWise' ? 'top' : 'bottom';\n                    }\n                    else if (gradientAngle > 280 && gradientAngle <= 360\n                        || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) >= 2)) {\n                        direction = axis.direction === 'AntiClockWise' ? 'right' : 'left';\n                    }\n                }\n                gradientRangeColor = this.gauge.gradientModule.getGradientColorString(range, colorIndex, direction, rangeIndex);\n            }\n            range.rangeColor = gradientRangeColor ? gradientRangeColor : range.rangeColor;\n            if (range.roundedCornerRadius) {\n                if (range.isLinearCircularGradient && range.linearGradient.colorStop.length > 1) {\n                    if (colorIndex === 0 || colorIndex === range.linearGradient.colorStop.length - 1) {\n                        if (axis.direction === 'ClockWise') {\n                            this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === range.linearGradient.colorStop.length - 1\n                                ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex !== 0 ? Math.ceil(roundedEndAngle) : Math.ceil(endAngle)), ((colorIndex === range.linearGradient.colorStop.length - 1) ? startAngle : oldStart), (colorIndex !== 0 ? oldEnd : endAngle), location, colorIndex);\n                        }\n                        else {\n                            this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === 0 ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex === range.linearGradient.colorStop.length - 1\n                                ? Math.ceil(endAngle) : Math.ceil(roundedEndAngle)), ((colorIndex === 0) ? startAngle : oldStart), (colorIndex === range.linearGradient.colorStop.length - 1 ? endAngle : oldEnd), location, colorIndex);\n                        }\n                    }\n                    else {\n                        this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                    }\n                }\n                else {\n                    this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, location, colorIndex);\n                }\n            }\n            else {\n                this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n            }\n        }\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} roundedStartAngle - Specifies the rounded path of the start angle.\n     * @param {number} roundedEndAngle - Specifies the rounded path of the end angle.\n     * @param {number} oldStart - Specifies the rounded path of the old start value.\n     * @param {number} oldEnd - Specifies the rounded path of the old end value..\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.roundedRangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, location, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption((!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex\n            : this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex + '_Circular_' + colorIndex), range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} startAngle - Specifies the rounded path of the start angle.\n     * @param {number} endAngle - Specifies the rounded path of the end angle.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.rangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, startAngle, endAngle, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption(!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex : this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex + '_Circular_' + colorIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(this.gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element) {\n        var _this = this;\n        var ele = (document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index));\n        var rangeElement = (ele) ? document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index) :\n            this.gauge.renderer.createGroup({ id: this.gauge.element.id + '_Axis_Ranges_' + index });\n        var startWidth;\n        var startEndDifference;\n        var endWidth;\n        var previousEndWidth;\n        var previousStartWidth;\n        axis.ranges.map(function (range, rangeIndex) {\n            range.isLinearCircularGradient = !isNullOrUndefined(_this.gauge.gradientModule)\n                && !isNullOrUndefined(range.linearGradient) && isNullOrUndefined(range.linearGradient.startValue)\n                && isNullOrUndefined(range.linearGradient.endValue) && !isNullOrUndefined(range.linearGradient.colorStop);\n            range.pathElement = [];\n            if (!isNullOrUndefined(range.offset) && range.offset.length > 0) {\n                range.currentDistanceFromScale = stringToNumber(range.offset, axis.currentRadius);\n            }\n            else {\n                range.currentDistanceFromScale = range.offset;\n            }\n            _this.calculateRangeRadius(axis, range);\n            if (range.startWidth.length > 0) {\n                startWidth = toPixel(range.startWidth, range.currentRadius);\n            }\n            else {\n                startWidth = range.startWidth;\n            }\n            if (range.endWidth.length > 0) {\n                endWidth = toPixel(range.endWidth, range.currentRadius);\n            }\n            else {\n                endWidth = range.endWidth;\n            }\n            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);\n            if (range.isLinearCircularGradient) {\n                for (var i = 0; i < range.linearGradient.colorStop.length; i++) {\n                    if (i <= (range.linearGradient.colorStop.length - 1)) {\n                        previousEndWidth = i === 0 ? endWidth : previousEndWidth;\n                        previousStartWidth = i === 0 ? startWidth : previousStartWidth;\n                        startEndDifference = (Math.abs(previousStartWidth - previousEndWidth) / (range.linearGradient.colorStop.length));\n                        if (i > 0) {\n                            startWidth = endWidth;\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                        else {\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                    }\n                    else {\n                        startWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                            : startWidth + startEndDifference;\n                        endWidth = (previousEndWidth);\n                    }\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, i);\n                }\n            }\n            else {\n                _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, null);\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     *\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {\n        var actualRadius = !isNullOrUndefined(range.position) && range.position !== 'Auto' && isNullOrUndefined(range.radius) ?\n            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :\n                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :\n                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;\n        return actualRadius;\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { linear, getAngleFromValue, getCompleteArc, getRoundedPathArc, getLocationFromAngle, appendPath, textElement, PathOption, TextOption, calculateShapes, Size, stringToNumber } from '../utils/helper';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {boolean} animate - Specifies the boolean value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        axis.pointers.map(function (pointer, pointerIndex) {\n            if (!isNullOrUndefined(pointer.offset) && pointer.offset.length > 0) {\n                pointer.currentDistanceFromScale = stringToNumber(pointer.offset, axis.currentRadius);\n            }\n            else {\n                pointer.currentDistanceFromScale = pointer.offset;\n            }\n            range = axis.visibleRange;\n            pointer.pathElement = [];\n            _this.calculatePointerRadius(axis, pointer);\n            childElement = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n            });\n            _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n            _this.setPointerValue(axis, pointer, pointer.currentValue);\n            pointerElement.appendChild(childElement);\n            if (animate || pointer.animation.enable) {\n                _this.doPointerAnimation(pointer, axis);\n            }\n        });\n        element.appendChild(pointerElement);\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     *\n     * @returns {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = !isNullOrUndefined(pointer.radius) ?\n            stringToNumber(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?\n            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));\n    };\n    /**\n     * Measure the pointer length of the circular gauge based on pointer position.\n     *\n     * @returns {number}\n     */\n    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {\n        if (pointer.markerShape === 'Text') {\n            var pointerRadius = void 0;\n            var pointerSize = parseInt(pointer.textStyle.size, 10);\n            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset +\n                        pointer.currentDistanceFromScale) :\n                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);\n            return pointerRadius;\n        }\n        else {\n            var pointerRadius = void 0;\n            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;\n            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||\n                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :\n                pointer.markerWidth / 2) : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -\n                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));\n            return pointerRadius;\n        }\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var needle = pointer.needleTail;\n        var cap = pointer.cap;\n        var pointerRadius;\n        var location;\n        var direction;\n        var needleStartWidth = pointer.needleStartWidth;\n        var needleEndWidth = pointer.needleEndWidth;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        var gradientColor;\n        var gradientTailColor;\n        var gradientCapColor;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {\n            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';\n        }\n        else {\n            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + location.x + ' ' + (mid.y + needleStartWidth) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';\n        }\n        if (gauge.gradientModule) {\n            gradientColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, gradientColor ? gradientColor :\n            pointer.color || this.gauge.themeStyle.needleColor, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        // eslint-disable-next-line prefer-const\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (gauge.gradientModule) {\n            gradientTailColor = gauge.gradientModule.getGradientColorString(needle);\n        }\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, gradientTailColor ? gradientTailColor : pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (gauge.gradientModule) {\n            gradientCapColor = gauge.gradientModule.getGradientColorString(cap);\n        }\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, gradientCapColor ? gradientCapColor : pointer.cap.color || this.gauge.themeStyle.capColor, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle && !checkMinValue ? [startAngle, startAngle = endAngle - 1][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            // eslint-disable-next-line no-constant-condition\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        var oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        var roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value && !checkMinValue) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));\n                }\n            }\n            else {\n                element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var gradientMarkerColor;\n        var angle = Math.round(getAngleFromValue(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n        var shapeBasedOnPosition = pointer.markerShape;\n        if (gauge.gradientModule) {\n            gradientMarkerColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        if (isNullOrUndefined(pointer.radius) && !isNullOrUndefined(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||\n            pointer.markerShape === 'Triangle')) {\n            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?\n                'InvertedTriangle' : (pointer.position === 'Inside' &&\n                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));\n        }\n        var location = getLocationFromAngle((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);\n        if (pointer.markerShape === 'Text') {\n            var textOption = new TextOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +\n                (location.x) + ',' + location.y + ')', 'auto');\n            textElement(textOption, pointer.textStyle, pointer.textStyle.color, parentElement, 'pointer-events : auto; ');\n        }\n        else {\n            pointer.pathElement.push(appendPath(calculateShapes(location, shapeBasedOnPosition, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, gradientMarkerColor ? gradientMarkerColor : pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n        }\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var gradientBarColor;\n        if (gauge.gradientModule) {\n            gradientBarColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, gradientBarColor ? gradientBarColor :\n            pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     *\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = !isNullOrUndefined(pointer.previousValue) ? pointer.previousValue : axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element\n     * @param {number} start - Specifies the start\n     * @param {number} end - Specifies the end\n     * @param {Axis} axis - Specifies the axis\n     * @param {Pointer} pointer - Specifies the pointer\n     * @param {number} radius - Specifies the radius\n     * @param {number} innerRadius - Specifies the innerRadius\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                if (start !== end) {\n                    element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                        _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, _this.gauge.isBlazor ? {} : { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {number} start - Specifies the start.\n     * @param {number} end - Specifies the end.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} radius - Specifies the radius.\n     * @param {number} innerRadius - Specifies the innerRadius.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (roundRadius) {\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        // eslint-disable-next-line prefer-const\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, _this.gauge.isBlazor ? {} : { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { calculateSum, VisibleLabels, measureText, isCompleteAngle, getLocationFromAngle } from '../utils/helper';\nimport { Size, Rect, stringToNumber, getLabelFormat } from '../utils/helper';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar AxisLayoutPanel = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            // eslint-disable-next-line prefer-spread\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerX) && isNullOrUndefined(this_1.gauge.centerY)) {\n                var startAngle = void 0;\n                var endAngle = void 0;\n                startAngle = axis.startAngle;\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : endPoint;\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endYDiff = Math.abs(startPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            if (this_1.gauge.isBlazor) {\n                var cancel = args.cancel, name_1 = args.name, currentRadius_1 = args.currentRadius, midPoint = args.midPoint;\n                args = { cancel: cancel, name: name_1, currentRadius: currentRadius_1, midPoint: midPoint };\n            }\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                if (!_this.gauge.isBlazor) {\n                    _this.calculateVisibleLabels(axis);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Rect} rect - Specifies the rect.\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var _this = this;\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var interval = axis.visibleRange.interval;\n        var max = axis.visibleRange.max;\n        var _loop_2 = function (i) {\n            roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                    format(roundValue),\n                value: roundValue\n            };\n            if (this_2.gauge.isBlazor) {\n                var axis_1 = argsData.axis, blazorArgsData = __rest(argsData, [\"axis\"]);\n                argsData = blazorArgsData;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                    if (i === max && _this.gauge.isBlazor && document.getElementById(_this.gauge.element.id + '_AxesCollection')) {\n                        var currentLast = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value\n                            : null;\n                        if (currentLast === axis.visibleRange.max || axis.showLastLabel !== true) {\n                            _this.getMaxLabelWidth(_this.gauge, axis);\n                            axis.nearSize = axis.nearSize + axis.maxLabelSize.height;\n                            axis.farSize = axis.farSize + axis.maxLabelSize.height;\n                            _this.axisRenderer.drawAxisLabels(axis, _this.gauge.axes.length - 1, (document.getElementById(_this.gauge.element.id + '_Axis_Group_' + (_this.gauge.axes.length - 1))), _this.gauge);\n                        }\n                    }\n                }\n            };\n            axisLabelRenderSuccess.bind(this_2);\n            this_2.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        };\n        var this_2 = this;\n        for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {\n            _loop_2(i);\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (!isNullOrUndefined(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            if (this.gauge.isBlazor) {\n                var axis_2 = argsData.axis, blazorArgsData = __rest(argsData, [\"axis\"]);\n                argsData = blazorArgsData;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                    if (_this.gauge.isBlazor && document.getElementById(_this.gauge.element.id + '_AxesCollection')) {\n                        _this.getMaxLabelWidth(_this.gauge, axis);\n                        axis.farSize = axis.farSize + axis.maxLabelSize.height;\n                        axis.nearSize = axis.nearSize + axis.maxLabelSize.height;\n                        _this.axisRenderer.drawAxisLabels(axis, _this.gauge.axes.length - 1, (document.getElementById(_this.gauge.element.id + '_Axis_Group_' + (_this.gauge.axes.length - 1))), _this.gauge);\n                    }\n                }\n            };\n            axisLabelRenderSuccess.bind(this);\n            this.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var heightForCross;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        var labelPadding = 10;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?\n                axis.minorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?\n                axis.maxLabelSize.height / 2 : heightForCross;\n            lineSize = lineSize < heightForCross ? heightForCross : lineSize;\n            majorTickOffset = axis.majorTicks.offset;\n            minorTickOffset = axis.minorTicks.offset;\n            labelOffset = axis.labelStyle.offset;\n            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;\n            // Calculating the outer space of the axis\n            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&\n                axis.labelStyle.position === 'Outside') ? axisPadding : 0;\n            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +\n                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?\n                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?\n                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +\n                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?\n                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?\n                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            renderer.checkAngles(axis);\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { appendPath, textElement, PathOption, TextOption, calculateShapes, textTrim, removeElement } from '../utils/helper';\nimport { Rect, Size, GaugeLocation, stringToNumber, measureText, RectOption, getElement, showTooltip } from '../utils/helper';\nimport { Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Font, Border, Margin } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the location of the legend in circular gauge.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Sets and gets the options to customize the legend for the ranges in the circular gauge.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/*\n * Sets and gets the module to add the legend in the circular gauge.\n */\nvar Legend = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**\n         * @private\n         */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     *\n     * @param {Axis[]} axes - Specifies the axes.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     *\n     * @param {number} start - Specifies the start.\n     * @param {number} size - Specifies the size.\n     * @param {number} legendSize - Specifies the  legendSize.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @returns {number} - Returns the start value.\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     *\n     * @param {LegendPosition} position - Specifies the position.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @returns {void}\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     *\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds, redraw) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID, redraw);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            // starting shape center x,y position && to resolve lint error used new line for declaration\n            var start = new GaugeLocation(legendBounds.x + padding + (legend.shapeWidth / 2), legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.setAttribute('style', 'cursor: ' + ((!legend.toggleVisibility) ? 'auto' : 'pointer'));\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup, redraw);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     *\n     * @param {Rect} bounds - Specifies the bounds.\n     * @param {TextOption} textOption - Specifies the textOption.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @returns {void}\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = '#545454';\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.setAttribute('style', 'cursor: pointer');\n        }\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = '1/' + this.totalPages;\n        var pageTextElement = textElement(textOption, legend.textStyle, legend.textStyle.color || this.gauge.themeStyle.labelColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5), y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) +\n            padding + size.width)) + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     *\n     * @param {Element} pagingText - Specifies the pagingText.\n     * @param {number} page - Specifies the page.\n     * @param {number} pageNumber - Specifies the pageNumber.\n     * @returns {number} - Returns the size.\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            var pageLength = page * this.maxColumns;\n            size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = 'translate(-' + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = (pageNumber) + '/' + this.totalPages;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {TextOption} textOptions - Specifies the textOptions.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        textOptions.text = legendOption.text;\n        textOptions.x = legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding;\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        var element = textElement(textOptions, legend.textStyle, fontcolor, group, '');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill : this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, '0', '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {GaugeLocation} start - Specifies the start.\n     * @param {number} textPadding - Specifies the textPadding.\n     * @param {LegendOptions} prevLegend - Specifies the prevLegend.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} count - Specifies the count.\n     * @param {number} firstLegend - Specifies the firstLegend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : this.maxColumnWidth);\n                legendOption.location.y = start.y;\n                this.pageXCollections.push(legendOption.location.x - (this.legend.shapeWidth / 2) - padding);\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            var previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n            if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width, this.legendBounds.x);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To show or hide the legend on clicking the legend.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled = !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     *\n     * @param {Index[]} toggledIndexes - Specifies the toggledIndexes.\n     * @returns {void}\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                rangeElement.style.visibility = 'visible';\n                shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex].fill);\n                textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                rangeElement.style.visibility = 'hidden';\n                shapeElement.setAttribute('fill', hiddenColor);\n                textElement_1.setAttribute('fill', hiddenColor);\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     *\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @param {LegendOptions[]} legendCollections - Specifies the legendCollections.\n     * @returns {LegendOptions} - Specifies the LegendOptions.\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     *\n     * @param {Event} event - Specifies the event.\n     * @param {boolean} pageUp - Specifies the pageUp.\n     * @returns {void}\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[0], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     *\n     * @param {number} tx - Specifies the tx value.\n     * @param {number} width - Specifies the width.\n     * @param {number} legendX - Specifies the legendX.\n     * @returns {number} - Returns the number.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width, legendX) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     *\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {string} id - Specifies the id.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {Element} - Returns the element.\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id, redraw) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        // eslint-disable-next-line max-len\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath, redraw);\n        legendItemsGroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     *\n     * @param {Element} parent - Specifies the element.\n     * @param {Element} childElement - Specifies the child element.\n     * @param {boolean} redraw - Specifies the boolean value.\n     * @param {boolean} isAnimate - Specifies the boolean value.\n     * @param {string} x - Specifies the x value.\n     * @param {string} y - Specifies the y value.\n     * @param {GaugeLocation} start - Specifies the start value.\n     * @param {string} direction - Specifies the direction.\n     * @param {boolean} forceAnimate - Specifies the boolean value.\n     * @param {boolean} isRect - Specifies the rect value.\n     * @param {Rect} previousRect - Specifies the previous rect value.\n     * @param {number} animateDuration - Specifies the animate duration.\n     * @returns {void}\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement, redraw, isAnimate, x, y, start, direction, forceAnimate, isRect, previousRect, animateDuration) {\n        if (isAnimate === void 0) { isAnimate = false; }\n        if (x === void 0) { x = 'x'; }\n        if (y === void 0) { y = 'y'; }\n        if (forceAnimate === void 0) { forceAnimate = false; }\n        if (isRect === void 0) { isRect = false; }\n        if (previousRect === void 0) { previousRect = null; }\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        var duration = animateDuration ? animateDuration : 300;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     *\n     * @param {LegendOptions[]} legendCollection - Specifies the legend collection.\n     * @returns {number} - Returns the count.\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     *\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /**\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} left - Specifies the left.\n     * @param {number} right - Specifies the right.\n     * @param {number} top - Specifies the top.\n     * @param {number} bottom - Specifies the bottom.\n     * @returns {Rect} - Returns the rect.\n     * @private\n     */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     *\n     * @param {number} computedWidth - Specifies compute width.\n     * @param {number} computedHeight - Specifies compute height.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legend bounds.\n     * @returns {void}\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n    };\n    /**\n     * To find maximum column size for legend\n     *\n     * @param {number[]} columns - Specifies the columns\n     * @param {number} width - Specifies the width\n     * @param {number} padding - Specifies the padding\n     * @param {number} rowWidth - Specifies the row width\n     * @returns {number} - Returns the number\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     *\n     * @param {Event} event - Specifies the event.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.move = function (event) {\n        var x = this.gauge.mouseX;\n        var y = this.gauge.mouseY;\n        var targetId = event.target.id;\n        if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1) {\n            var axisIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n            var rangeIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n            var text = '';\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legends = _a[_i];\n                if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                    text = legends.originalText;\n                }\n            }\n            showTooltip(text, x, y, this.gauge.element.offsetWidth, this.gauge.element.id + '_EJ2_Legend_Tooltip', getElement(this.gauge.element.id + '_Secondary_Element'));\n        }\n        else {\n            removeElement(this.gauge.element.id + '_EJ2_Legend_Tooltip');\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @param {CircularGauge} circulargauge - Specifies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (circulargauge) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n *\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","import { createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Represent the Pdf export for gauge\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PdfExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName Specfies the file name of the document.\n     * @param {PdfPageOrientation} orientation - Specfies the orientation of the PDF document to export the component.\n     * @param {boolean} allowDownload - Specfies whether to download the document or not.\n     * @returns {Promise<string>} - Returns the promise string\n     * @private\n     */\n    PdfExport.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(_this.control.svgObject)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.\n                    drawImage(new PdfBitmap(imageString), 0, 0, _this.control.availableSize.width, _this.control.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @param {CircularGauge} gauge - Specfies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    PdfExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\nimport { triggerDownload } from '../utils/helper';\n/**\n * Represent the Image Export for gauge\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function ImageExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the image file or not.\n     * @returns {Promise<string>} - Returns promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                _this.control.svgObject.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(_this.control.svgObject)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    ImageExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { print as printWindow, createElement } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from './constants';\n/**\n * Represent the print for gauge\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specifies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Print(control) {\n        this.control = control;\n    }\n    /**\n     * To print the gauge\n     *\n     * @param {string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the gauge\n     *\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {Element} - Returns the div element.\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print.\n     *\n     * @param {CircularGauge} gauge - Specfies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the color information for the gradient in the circular gauge.\n */\nvar ColorStop = /** @class */ (function (_super) {\n    __extends(ColorStop, _super);\n    function ColorStop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#000000')\n    ], ColorStop.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ColorStop.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('0%')\n    ], ColorStop.prototype, \"offset\", void 0);\n    __decorate([\n        Property('')\n    ], ColorStop.prototype, \"style\", void 0);\n    return ColorStop;\n}(ChildProperty));\nexport { ColorStop };\n/**\n * Specifies the position in percentage from which the radial gradient must be applied.\n */\nvar GradientPosition = /** @class */ (function (_super) {\n    __extends(GradientPosition, _super);\n    function GradientPosition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"x\", void 0);\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"y\", void 0);\n    return GradientPosition;\n}(ChildProperty));\nexport { GradientPosition };\n/**\n * This specifies the properties of the linear gradient colors for the circular gauge.\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"endValue\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], LinearGradient.prototype, \"colorStop\", void 0);\n    return LinearGradient;\n}(ChildProperty));\nexport { LinearGradient };\n/**\n * This specifies the properties of the radial gradient colors for the circular gauge.\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], RadialGradient.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"outerPosition\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"innerPosition\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], RadialGradient.prototype, \"colorStop\", void 0);\n    return RadialGradient;\n}(ChildProperty));\nexport { RadialGradient };\n/**\n * Sets and gets the module that enables the gradient option for pointers and ranges.\n *\n * @hidden\n */\nvar Gradient = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Gradient(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {name} name - Specifies the name of the gradient.\n     * @param {name} direction - Specifies the gradient position.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.calculateLinearGradientPosition = function (element, name, direction) {\n        var linearPosition = {\n            id: name,\n            x1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'right' ? '100%' : '0%')\n                : (!isNullOrUndefined(element.linearGradient.startValue) ? ((element.linearGradient.startValue.indexOf('%') === -1 ?\n                    element.linearGradient.startValue :\n                    parseFloat(element.linearGradient.startValue).toString()) + '%') : '0%')),\n            x2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1 ?\n                (direction === 'left' ? '100%' : '0%') :\n                (!isNullOrUndefined(element.linearGradient.endValue) ? ((element.linearGradient.endValue.indexOf('%') === -1 ?\n                    element.linearGradient.endValue : parseFloat(element.linearGradient.endValue).toString()) + '%') : '100%')),\n            y1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'bottom' ? '100%' : '0%') : '0%'),\n            y2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1\n                ? (direction === 'top' ? '100%' : '0%') : '0%')\n        };\n        return linearPosition;\n    };\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - Specifies the index of the axis.\n     * @param { string } direction - Specifies the gradient position.\n     * @param { number } rangeIndex - Specifies the index of the range.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.getLinearGradientColor = function (element, index, direction, rangeIndex) {\n        var render = new SvgRenderer('');\n        var colors = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            this.getCircularGradientColor(element.linearGradient.colorStop, index) :\n            this.getGradientColor(element.linearGradient.colorStop);\n        var name = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            '_' + this.gauge.svgObject.id + '_range_' +\n                rangeIndex + '_color_' + index + '_' + 'linearGradient'\n            : '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'linearGradient';\n        var gradientPosition = this.calculateLinearGradientPosition(element, name, direction);\n        gradientPosition = {\n            id: gradientPosition.id,\n            x1: gradientPosition.x1,\n            x2: gradientPosition.x2,\n            y1: gradientPosition.y1,\n            y2: gradientPosition.y2\n        };\n        var def = render.drawGradient('linearGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get color, opacity, offset and style for circular gradient path.\n     *\n     * @private\n     */\n    Gradient.prototype.getCircularGradientColor = function (colorStop, index) {\n        var colors = [];\n        var colorIndex = index;\n        for (var j = colorIndex; j < (index === (colorStop.length - 1) ? index + 1 : index + 2); j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n            colorIndex++;\n        }\n        return colors;\n    };\n    /**\n     * To get the radial gradient string.\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    Gradient.prototype.getRadialGradientColor = function (element) {\n        var render = new SvgRenderer('');\n        var colors = this.getGradientColor(element.radialGradient.colorStop);\n        var name = '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'radialGradient';\n        var gradientPosition = {\n            id: name,\n            r: (element.radialGradient.radius.indexOf('%') === -1 ?\n                element.radialGradient.radius :\n                parseFloat(element.radialGradient.radius).toString()) + '%',\n            cx: (element.radialGradient.outerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.x :\n                parseFloat(element.radialGradient.outerPosition.x).toString()) + '%',\n            cy: (element.radialGradient.outerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.y :\n                parseFloat(element.radialGradient.outerPosition.y).toString()) + '%',\n            fx: (element.radialGradient.innerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.x :\n                parseFloat(element.radialGradient.innerPosition.x).toString()) + '%',\n            fy: (element.radialGradient.innerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.y :\n                parseFloat(element.radialGradient.innerPosition.y).toString()) + '%'\n        };\n        var def = render.drawGradient('radialGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style.\n     *\n     * @param { ColorStopModel[]} colorStop - Specifies the color stop.\n     * @returns {GradientColor[]} - Returns the gradientColor.\n     * @private\n     */\n    Gradient.prototype.getGradientColor = function (colorStop) {\n        var colors = [];\n        for (var j = 0; j < colorStop.length; j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n        }\n        return colors;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get a gradient color string\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string\n     * @private\n     */\n    Gradient.prototype.getGradientColorString = function (element, index, direction, rangeIndex) {\n        var gradientColor;\n        if ((element.linearGradient && !isNullOrUndefined(element.linearGradient.colorStop)) ||\n            (element.radialGradient && !isNullOrUndefined(element.radialGradient.colorStop))) {\n            if (element.linearGradient) {\n                gradientColor = this.getLinearGradientColor(element, index, direction, rangeIndex);\n            }\n            else {\n                gradientColor = this.getRadialGradientColor(element);\n            }\n            this.gauge.gradientCount = this.gauge.gradientCount + 1;\n        }\n        else {\n            return null;\n        }\n        return gradientColor;\n    };\n    Gradient.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Gradient';\n    };\n    /**\n     * To destroy the Gradient.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    Gradient.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Gradient;\n}());\nexport { Gradient };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable max-len */\n/* eslint-disable brace-style */\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component, isBlazor } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { TextOption, textElement, RectOption, getAngleFromLocation } from './utils/helper';\nimport { getValueFromAngle, removeElement, getRange } from './utils/helper';\nimport { Size, stringToNumber, measureText, Rect, GaugeLocation, getElement, getPointer, setStyles, toPixel } from './utils/helper';\nimport { getAngleFromValue, getPathArc } from './utils/helper';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, pointerMove } from './model/constants';\nimport { rangeMove, pointerStart, rangeStart, pointerEnd, rangeEnd } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { LegendSettings, Legend } from './legend/legend';\nimport { PdfExport } from './model/pdf-export';\nimport { ImageExport } from './model/image-export';\nimport { Print } from './model/print';\nimport { Gradient } from './axes/gradient';\n/**\n * Represents the circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param {CircularGaugeModel} options - Specifies the options\n     * @param {string} element - Specifies the element\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.isDrag = false;\n        /**\n         * @private\n         */\n        _this.gradientCount = 0;\n        return _this;\n    }\n    /**\n     * To create svg object, renderer and binding events for the container.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.isBlazor = isBlazor();\n        this.unWireEvents();\n        this.trigger(load, this.isBlazor ? null : { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.renderElements();\n        this.renderComplete();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            var dragBlazorArgs;\n            var tooltip = _this.tooltipModule;\n            if (!args.cancel) {\n                if ((_this.enablePointerDrag || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.enablePointerDrag) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {\n                        _this.svgObject.setAttribute('cursor', 'pointer');\n                    }\n                    else {\n                        _this.svgObject.setAttribute('cursor', 'auto');\n                    }\n                }\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    _this.isDrag = true;\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    dragBlazorArgs = {\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        pointerIndex: dragPointInd,\n                        axisIndex: dragAxisInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x, args.y), dragAxisInd, dragPointInd);\n                    dragArgs.currentValue = dragBlazorArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, _this.isBlazor ? dragBlazorArgs : dragArgs);\n                    _this.activeRange = null;\n                }\n                else if (_this.enableRangeDrag && _this.activeRange) {\n                    _this.isDrag = true;\n                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.slice(-1), 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        name: dragMove,\n                        type: rangeMove,\n                        range: _this.activeRange,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    dragBlazorArgs = {\n                        name: dragMove,\n                        type: rangeMove,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    _this.rangeDrag(new GaugeLocation(args.x, args.y), dragAxisInd, dragRangeInd);\n                    _this.trigger(dragMove, _this.isBlazor ? dragBlazorArgs : dragArgs);\n                }\n            }\n        });\n        if (!this.isTouch) {\n            if (this.legendModule && this.legendSettings.visible) {\n                this.legendModule.move(e);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.activeRange = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     *\n     * @param {MouseEvent | PointerEvent} event - Specifies the pointer or mouse event.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the location of the gauge\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} pointerIndex - Specifies the pointer index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.axes[axisIndex].pointers[pointerIndex].value = value;\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the range draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the gauge location\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} rangeIndex - Specifies the range index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {\n        if (this.activeAxis) {\n            var axis = this.activeAxis;\n            var range = axis.visibleRange;\n            var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n            if (value >= range.min && value <= range.max) {\n                var previousValue1 = this.activeRange.currentValue;\n                this.activeRange.currentValue = value;\n                var add = (this.activeRange.end - this.activeRange.start);\n                var div = add / 2;\n                var avg = parseFloat(this.activeRange.start.toString()) + div;\n                this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : this.activeRange.start);\n                this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : this.activeRange.end) : value;\n                this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;\n                this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;\n            }\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var currentRange;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Pointer_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, _this.isBlazor ? {\n                    name: dragStart,\n                    type: pointerStart,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                } : {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: pointerStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                if (_this.enablePointerDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n            else if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Range_') >= 0) {\n                currentRange = getRange(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentRange.axisIndex];\n                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];\n                if (isNullOrUndefined(_this.activeRange.pathElement)) {\n                    _this.activeRange.pathElement = [e.target];\n                }\n                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, _this.isBlazor ? {\n                    name: dragStart,\n                    type: rangeStart,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                } : {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: rangeStart,\n                    range: _this.activeRange,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                });\n                if (_this.enableRangeDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        var blazorArgs = {\n            cancel: args.cancel, target: args.target, name: args.name, x: args.x, y: args.y\n        };\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, this.isBlazor ? blazorArgs : args);\n        if (this.activeAxis && this.activePointer && this.enablePointerDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, this.isBlazor ? {\n                name: dragEnd,\n                type: pointerEnd,\n                currentValue: this.activePointer.currentValue,\n                pointerIndex: pointerInd,\n                axisIndex: axisInd\n            } : {\n                name: dragEnd,\n                type: pointerEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n            this.isDrag = false;\n        }\n        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, this.isBlazor ? {\n                name: dragEnd,\n                type: rangeEnd,\n                rangeIndex: rangeInd,\n                axisIndex: axisInd\n            } : {\n                name: dragEnd,\n                type: rangeEnd,\n                axis: this.activeAxis,\n                range: this.activeRange,\n                axisIndex: axisInd,\n                rangeIndex: rangeInd\n            });\n            this.activeAxis = null;\n            this.activeRange = null;\n            this.isDrag = false;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @param {string} type - Specifies the type\n     * @param {string} name - Specifies the name\n     * @returns {IMouseEventArgs} - Returns the mouse event args\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     *\n     * @param {Event} e - Specifies the event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: !this.isBlazor ? this : null,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        if (!isNullOrUndefined(this.element)) {\n            if (this.element.classList.contains('e-circulargauge')) {\n                this.createSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            args.currentSize = this.availableSize;\n            this.animatePointer = false;\n            if (this.resizeTo) {\n                clearTimeout(this.resizeTo);\n            }\n            else if (this.element.classList.contains('e-circulargauge')) {\n                this.resizeTo = window.setTimeout(function () {\n                    _this.createSvg();\n                    _this.calculateBounds();\n                    _this.renderElements();\n                    args.currentSize = _this.availableSize;\n                    if (_this.isBlazor) {\n                        var previousSize = args.previousSize, name_1 = args.name, currentSize = args.currentSize;\n                        args = { previousSize: previousSize, name: name_1, currentSize: currentSize };\n                    }\n                    _this.trigger(resized, args);\n                }, 500);\n            }\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     *\n     * @param {HTMLElement} element - Specifies the html element\n     * @returns {void}\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        for (var i = 0; i < this.axes.length; i++) {\n            for (var j = 0; j < this.axes[i].annotations.length; j++) {\n                resetBlazorTemplate(this.element.id + '_Axis' + i + '_ContentTemplate' + j, '_ContentTemplate');\n            }\n        }\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        removeElement(this.element.id + '_svg');\n        this.clearTemplate();\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        this.availableSize = new Size(width, height);\n    };\n    /**\n     * To calculate the spacing of the circular gauge element.\n     *\n     * @param {number} top - Specifies the top value\n     * @param {number} left - Specifies the left value\n     * @param {number} width - Specifies the width\n     * @param {number} height - Specifies the height\n     * @param {number} radius - Specifies the radius\n     * @param {number} titleHeight - Specifies the titleHeight\n     * @param {number} isUpperAngle - Specifies the isUpperAngle\n     * @param {number} isLowerAngle - Specifies the isLowerAngle\n     * @param {number} isFullPercent - Specifies the boolean value\n     * @param {number} isUpper - Specifies the boolean value\n     * @param {number} isLower - Specifies the boolean value\n     * @returns {void}\n     */\n    /* eslint-disable max-len */\n    CircularGauge.prototype.radiusAndCenterCalculation = function (top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower) {\n        var rect;\n        var bottom = this.margin.bottom + this.border.width;\n        var minRadius;\n        var widthRadius;\n        var centerX;\n        var centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            if (!this.allowMargin) {\n                if (!isNullOrUndefined(this.legendModule) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                    minRadius = Math.min(width, height) / 2;\n                    rect = new Rect((left + (width / 2) - minRadius), (top + (height / 2) - minRadius), minRadius * 2, minRadius * 2);\n                }\n                else {\n                    if (width > height && (isLowerAngle && isLower || isUpperAngle && isUpper)) {\n                        widthRadius = ((width) / 2);\n                        var heightValue = isUpper && isLower ? (height / 2) : (height * (3 / 4));\n                        if (widthRadius > heightValue) {\n                            widthRadius = heightValue;\n                        }\n                        rect = new Rect((left + (width / 2) - widthRadius), (top + (height / 2) - widthRadius), widthRadius * 2, widthRadius * 2);\n                    }\n                    else {\n                        if (height > width) {\n                            var heightRadius = height / 2;\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - heightRadius), radius * 2, heightRadius * 2);\n                        }\n                        else {\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n                        }\n                    }\n                }\n            }\n            else {\n                rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            }\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        if (!this.allowMargin) {\n            if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                var difference = height - this.gaugeRect.height;\n                this.gaugeRect.width = width - ((this.availableSize.width - this.gaugeRect.width) / 2);\n                this.gaugeRect.y = this.gaugeRect.y - difference;\n                this.gaugeRect.height = this.gaugeRect.height + difference + ((this.availableSize.height - this.gaugeRect.height) / 2);\n            }\n            else if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Left' || this.legendSettings.position === 'Right')) {\n                var difference = this.gaugeRect.height - this.gaugeRect.width;\n                this.gaugeRect.x = this.legendSettings.position === 'Right'\n                    ? this.gaugeRect.x + this.margin.right : this.gaugeRect.x;\n                this.gaugeRect.width = this.legendSettings.position === 'Left' ?\n                    Math.abs(width - ((this.availableSize.width - this.gaugeRect.width + difference) / 2))\n                    : Math.abs(width - ((this.availableSize.width - this.gaugeRect.width) / 2) - 10);\n            }\n            centerX = this.centerX !== null ?\n                stringToNumber(this.centerX, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            if ((isUpperAngle || isLowerAngle) && !isNullOrUndefined(this.legendModule)) {\n                centerX = (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')\n                    ? this.availableSize.width / 2 : this.legendSettings.position === 'Right' ? (this.gaugeRect.width / 2) + this.margin.right :\n                    centerX;\n            }\n            centerY = ((isUpperAngle || isLowerAngle) ? (isUpperAngle ?\n                (((this.gaugeRect.height * (3 / 4) + this.gaugeRect.y) - bottom))\n                : (((this.gaugeRect.height * (1 / 4)) + (this.gaugeRect.y)))) : this.gaugeRect.y + (this.gaugeRect.height / 2));\n            centerY = !isFullPercent && (isUpperAngle || isLowerAngle) ? (this.gaugeRect.height / 2) + this.gaugeRect.y + (radiusPercent * (3 / 4) * (1 / 2)) : centerY;\n            if (!isNullOrUndefined(this.axes) && this.axes.length > 1 && !isNullOrUndefined(this.midPoint)) {\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                if (isUpper && isLower) {\n                    centerY = (this.availableSize.height / 2) - bottom;\n                }\n            }\n        }\n        else {\n            centerX = this.centerX !== null ?\n                stringToNumber(this.centerX, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            centerY = this.centerY !== null ?\n                stringToNumber(this.centerY, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        }\n        this.midPoint = new GaugeLocation(centerX, centerY);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var bottom = margin.bottom + this.border.width;\n        var left = margin.left + this.border.width;\n        var isUpper = false;\n        var isLower = false;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        if (!this.allowMargin) {\n            for (var j = 0; j < this.axes.length; j++) {\n                var isUpperAngle = 270 <= this.axes[j].startAngle && this.axes[j].startAngle <= 360 &&\n                    0 <= this.axes[j].endAngle && this.axes[j].endAngle <= 90;\n                var isLowerAngle = 90 >= this.axes[j].startAngle && this.axes[j].startAngle <= 180 &&\n                    180 <= this.axes[j].endAngle && 270 <= this.axes[j].endAngle && 0 !== this.axes[j].startAngle &&\n                    360 !== this.axes[j].endAngle;\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                var isFullPercent = this.axes[j].radius !== null ? parseInt(this.axes[0].radius.split('%')[0], 10) >= 100 : true;\n                var radiusPercent = this.axes[j].radius !== null ? radius * (parseInt(this.axes[0].radius.split('%')[0], 10) / 100) : radius;\n                this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower);\n            }\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, false, false, null, null, false, false);\n        }\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     *\n     * @param {boolean} animate - Specifies whether animation is true or false\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, this.isBlazor ? {} : { gauge: this });\n        removeElement('gauge-measuretext');\n    };\n    /**\n     * Method to render legend for accumulation chart\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            this.titleStyle.fontFamily = this.themeStyle.fontFamily || this.titleStyle.fontFamily;\n            this.titleStyle.size = this.themeStyle.fontSize || this.titleStyle.size;\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to set the pointer value dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param pointerIndex - Specifies the index value for the pointer in circular gauge.\n     * @param value - Specifies the value for the pointer in circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        this.isProtectedOnChange = true;\n        pointer.previousValue = pointer.currentValue;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * This method is used to set the annotation content dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param annotationIndex - Specifies the index value for the annotation in circular gauge.\n     * @param content - Specifies the content for the annotation in circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            var secondaryElement = getElement(this.element.id + '_Secondary_Element');\n            if (!isElementExist && !isNullOrUndefined(secondaryElement)) {\n                secondaryElement.appendChild(element);\n            }\n        }\n    };\n    /**\n     * This method is used to print the rendered circular gauge.\n     *\n     * @param id - Specifies the element to print the circular gauge.\n     */\n    CircularGauge.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the circular gauge.\n     *\n     * @param type - Specifies the type of the export.\n     * @param fileName - Specifies the file name for the exported file.\n     * @param  orientation - Specified the orientation for the exported pdf document.\n     * @param allowDownload - Specifies whether to download as a file.\n     */\n    CircularGauge.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    /**\n     * Method to set mouse x, y from events\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {void}\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * This method is used to set the range values dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param rangeIndex - Specifies the index value for the range in circular gauge.\n     * @param start - Specifies the start value for the current range in circular gauge.\n     * @param end - Specifies the end value for the current range i circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     *\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns the modules\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print]\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend]\n            });\n        }\n        modules.push({\n            member: 'Gradient',\n            args: [this, Gradient]\n        });\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {CircularGaugeModel} newProp - Specifies the new property\n     * @param {CircularGaugeModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'legendSettings':\n                    refreshWithoutAnimation = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     *\n     * @returns {string} - Returns the module name\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enableRangeDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowMargin\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"beforePrint\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n","import * as index from './index';\nindex.CircularGauge.Inject(index.GaugeTooltip, index.Annotations, index.Legend, index.Print, index.PdfExport, index.ImageExport, index.Gradient);\nexport * from './index';\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","setStyles","element","fill","border","setStyleAttribute","stroke","stroke-width","width","measureElementRect","bounds","getBoundingClientRect","removeElement","stringToNumber","containerSize","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","gauge","functionName","calculateSum","from","to","values","sum","length","linear","currentTime","startValue","endValue","duration","Math","cos","PI","getAngleFromValue","maximumValue","minimumValue","startAngle","endAngle","isClockWise","angle","isCompleteAngle","getDegree","round","degree","getValueFromAngle","totalAngle","floor","getAngleFromLocation","center","point","atan2","getLocationFromAngle","radius","radian","GaugeLocation","sin","getPathArc","start","end","startWidth","endWidth","range","axis","startRadius","isNullOrUndefined","position","isLinearCircularGradient","direction","endRadius","arcRadius","insideArcRadius","insideEndRadius","insideStartRadius","getRangePath","getCirclePath","arcPath","arcStartOne","arcEndOne","arcStartTwo","arcEndTwo","clockWise","innerStart","innerEnd","pointPosition","arcRoundedPath","outerOldEnd","innerOldEnd","innerOldStart","outerOldStart","roundedPath","arcWidthPath","endArc","startArc","widthDifference","abs","arcWidthPathCalculation","roundedArcWidthPathCalculation","startValueToAngle","maximum","minimum","endRadii","sqrt","pow","centerStartDistance","centerDistance","roundedCornerRadius","arcStart","arcEnd","angleValueDirection","endRadiusValue","arcTwo","startGreater","arcOne","degreeAngle","degreeValueOne","degreeValueTwo","startAddArc","startSubArc","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getCompleteArc","innerRadius","checkMinValue","getCompletePath","getElement","getTemplateFunction","template","templateFn","isBlazor","numb","match","toString","replace","isNaN","parseFloat","querySelectorAll","charAt","templateComplier","querySelector","trim","e","remove","getPointer","targetId","tempString","split","axisIndex","pointerIndex","getRange","rangeIndex","getElementSize","elementSize","tooltipData","templateElement","templateLength","height","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getLabelFormat","format","calculateShapes","location","shape","url","path","space","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","getRangeColor","ranges","min","max","currentRange","filter","rangeColor","textTrim","maxWidth","label","i","substring","showTooltip","areaWidth","tooltip","triggerDownload","fileName","type","isDownload","attrs","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","window","bubbles","cancelable","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","tooltipFillColor","tooltipFontColor","labelColor","lineColor","majorTickColor","minorTickColor","pointerColor","capColor","needleColor","needleTailColor","fontSize","labelFontFamily","tooltipFillOpacity","tooltipTextOpacity","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","axisLabelFont","legendLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","Annotations","elementId","renderAnnotation","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","renderReactTemplates","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","name_1","trigger","observedArgs","length_1","slice","updateLocation","updateBlazorTemplate","currentRadius","midPoint","description","getModuleName","destroy","GaugeTooltip","tooltipId","borderStyle","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","currentPointer","currentAxis","angle_1","currentValue","visibleRange","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent_1","RegExp","tooltipArgs","pointer","event","appendInBodyTag","pointerTooltip","tooltipRect","findPosition","themeStyle","svgTooltip","svgTooltipCreate","arrowInverted","appendTo","isDrag","rangeSvgRect_1","rangeElementRect","rangeAxisRect_1","rect_2","rangeAngle_1","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData_1","endData_1","rangeContent_1","rangeTooltipArgs","rangeTooltip","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","rect_3","currentAnnotation","annotationAngle","annotationContent","annotationSettings","annotationTooltipArgs","name_3","location_3","event_3","annotationTooltip","annotationTemplate","elementSizeAn","tooltipPosition","removeTooltip","clearTemplate","tooltipArg","Tooltip","enable","data","enableAnimation","inverted","areaBounds","blazorTemplate","className","child","roundingPlaces","toFixed","addLeft","addTop","addHeight","addWidth","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","checkAngles","drawAxisLine","lineStyle","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","checkLabelOpposed","majorTicks","minorTicks","labelPadding","shouldMaintainPadding","nearSize","maxLabelSize","offset","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","lastlabel","FindAxisLabelCollision","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorInterval","interval","isRangeColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","push","axisLineWidth","drawRangePath","rangeElement","colorIndex","roundedStartAngle","roundedEndAngle","gradientRangeColor","rangeSplitValue","linearGradient","colorStop","rangeStart","rangeEnd","isAngleCross360","rangeGap","startAndEndRangeGap","process","degreeValue","gradientModule","radialGradient","rangeColorLength","degreeRange","degreeRangeValue","gradientDegree","gradientAngle","gradientAntiAngle","getGradientColorString","roundedRangeAppendPathCalculation","ceil","rangeAppendPathCalculation","pathElement","drawAxisRange","startEndDifference","previousEndWidth","previousStartWidth","currentDistanceFromScale","calculateRangeRadius","calculateRangeRadiusWithPosition","rangeColors","PointerRenderer","drawPointers","animate","pointerElement","pointers","calculatePointerRadius","setPointerValue","animation","doPointerAnimation","pointerRadiusForPosition","markerShape","pointerSize","markerOffset","rangeBarOffset","pointerWidth","markerWidth","drawNeedlePointer","pointerRadius","rectDirection","gradientColor","gradientTailColor","gradientCapColor","needle","needleTail","cap","needleStartWidth","needleEndWidth","mid","minRadius","oldStartValue","oldEndValue","roundStartAngle","roundEndAngle","drawMarkerPointer","gradientMarkerColor","shapeBasedOnPosition","markerHeight","imageUrl","drawRangeBarPointer","gradientBarColor","previousValue","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","roundRadius","arg","__rest","s","t","getOwnPropertySymbols","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","this_1","_i","_a","moveToCenter","centerX","centerY","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","gaugeRect","calculateNumericInterval","currentRadius_1","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","log","currentInterval","this_2","blazorArgsData","axisLabelRenderSuccess","getMaxLabelWidth","lastLabel","maxVal","lineSize","outerHeight","innerHeight","heightForCross","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","Location","LegendSettings","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendSettings","legendID","click","getLegendOptions","legendCollection","j","legendText","LegendOptions","visible","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","redraw","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translatePage","pagingText","page","pageNumber","translate","textContent","group","fontcolor","prevLegend","maxColumnWidth","previousBound","totalRowCount","availablewidth","getAvailWidth","legendItemsId","toggledIndex","legendItemsId_1","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","visibility","legendCollections","legendCollections_1","pageUp","pageText","tx","legendX","drawRectangle","legendItemsGroup","clippath","createClipPath","isAnimate","forceAnimate","isRect","previousRect","animateDuration","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","columns_1","move","mouseX","mouseY","legends","originalText","offsetWidth","circulargauge","PdfExport","control","export","orientation","allowDownload","Promise","resolve","reject","userAgent","PdfPageOrientation","Landscape","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image","Image","context","getContext","onload","drawImage","revokeObjectURL","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","src","ImageExport","svgData","outerHTML","image_1","context_1","Print","print","elements","printWindow","open","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","beforePrintArgs","div","forEach","cloneNode","Element","ColorStop","GradientPosition","LinearGradient","RadialGradient","Gradient","calculateLinearGradientPosition","x1","x2","y1","y2","getLinearGradientColor","colors","getCircularGradientColor","getGradientColor","gradientCount","gradientPosition","def","drawGradient","getRadialGradientColor","outerPosition","fx","innerPosition","fy","CircularGauge","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderComplete","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","isPointer","mouseLeave","isTouch","gaugeResize","setGaugeStyle","setMouseXY","legendModule","getMouseArgs","dragArgs","dragBlazorArgs","tooltipModule","enableRangeDrag","activePointer","dragPointInd","dragAxisInd","activeAxis","pointerDrag","activeRange","dragRangeInd","rangeDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","previousValue1","avg","pointInd","axisInd","rangeInd","blazorArgs","pointerInd","clientX","clientY","previousSize","currentSize","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","calculateSvgSize","resetBlazorTemplate","childNodes","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","containerHeight","offsetHeight","borderWidth","join","radiusAndCenterCalculation","titleHeight","isUpperAngle","isLowerAngle","isFullPercent","radiusPercent","isUpper","isLower","widthRadius","allowMargin","heightValue","heightRadius","difference","title","titleStyle","renderBorder","renderTitle","tabIndex","isProtectedOnChange","setAnnotationValue","isElementExist","secondaryElement","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","svgRect","setRangeValue","axisRange","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","Event","NotifyPropertyChanges","Component","index.CircularGauge","Inject","index.GaugeTooltip","index.Annotations","index.Legend","index.Print","index.PdfExport","index.ImageExport","index.Gradient"],"mappings":"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"}